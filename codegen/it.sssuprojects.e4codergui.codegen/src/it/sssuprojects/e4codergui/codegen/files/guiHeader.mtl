[comment encoding = UTF-8 /]
[module guiHeader('http://www.sssuprojects.it/e4codergui')]

[import it::sssuprojects::e4codergui::codegen::files::includes /]
[import it::sssuprojects::e4codergui::codegen::files::common /]
[import it::sssuprojects::e4codergui::codegen::files::widgets /]

[template public generateHeaderCode(root : DocumentRoot)]
[file ('my_gui.h', false, 'UTF-8')]
/*
 * my_gui.h
 * This code is auto generated from an xml file.
 */

[root.generateHeaderIncludes()/]

[for (frame : FrameType | root.gui.frame) separator('\n') ]
/* Definitions for window named "[frame.name/]" */
extern struct Window [frame.name.cname()/];

/* Indexes to retrieve widget using, e.g: "[frame.name.cname()/].widgets['['/][frame.name.cname()/]_[frame.element->at(1).name.cname()/]_IDX]" */
[for (widget : Widget | frame.element) ]
#define [frame.name.cname()/]_[widget.name.cname()/]_IDX['\t\t'/] [frame.element->lastIndexOf(widget)-1/]
[/for]

/* Initializes and returns Window struct for frame "[frame.name/]" */
struct Window * createWindow_[frame.name.cname()/]();

/* Callback functions for widgets */
[for (widget : Widget | frame.element) ]
[widget.widget_callbacks_decl()/]
[/for]
[/for]

[/file]
[/template]

[**
 * Use to generate the callbacks declarations
*/]
[template private widget_callbacks_decl(widget : Widget) post (trim()) ]
[if (widget.type = 'button-image')]
[widget.generateButtonImage_callbacks_decl()/]
[elseif (widget.type = 'buttonled')]
[widget.generateButtonLed_callbacks_decl()/]
[elseif (widget.type = 'image')]
[comment: No callback for this widget type/]
[elseif (widget.type = 'buttonknob')]
[widget.generateButtonKnob_callbacks_decl()/]	
[elseif (widget.type = 'xx3')]
xx	
[else] [comment Default handling/]
[comment: No callback for this widget type/]
[/if]
[/template]

