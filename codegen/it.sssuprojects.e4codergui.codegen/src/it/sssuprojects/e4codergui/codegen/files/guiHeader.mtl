[comment encoding = UTF-8 /]
[module guiHeader('http://www.sssuprojects.it/e4codergui')]

[import it::sssuprojects::e4codergui::codegen::files::common /]
[import it::sssuprojects::e4codergui::codegen::files::widgets /]

[template public generateHeaderCode(root : DocumentRoot)]
[file ('my_gui.h', false, 'UTF-8')]
/*
 * my_gui.h
 * This code is auto generated from an xml file.
 */

//TODO: mettere a posto questi includes:
[root.generateIncludes()/]

[for (frame : FrameType | root.gui.frame) separator('\n') ]
/* Initializes and returns Window struct for frame "[frame.name/]" */
void struct Window * createWindow_[frame.name.cname()/]();
[for (widget : Widget | frame.element) before('\n')]
[widget.widget_callbacks_decl()/]
[/for]
[/for]

[/file]
[/template]

[**
 * includes for header file
*/]
[template private generateIncludes(root : DocumentRoot)]
#include <stdlib.h>

#include "windowmanager/core/windowmanager.h"
#include "windowmanager/graphics/color.h"
[/template]


[**
 * Use to generate the callbacks declarations
*/]
[template private widget_callbacks_decl(widget : Widget) post (trim()) ]
[if (widget.type = 'button-image')]
	[widget.generateButtonImage_callbacks_decl()/]
[elseif (widget.type = 'xxx')]
	xx
[elseif (widget.type = 'xx1')]
	xx	
[elseif (widget.type = 'xx2')]
	xx	
[elseif (widget.type = 'xx3')]
	xx	
[else] [comment Default handling/]
	void [widget.callback('dummy')/]();
[/if]
[/template]

