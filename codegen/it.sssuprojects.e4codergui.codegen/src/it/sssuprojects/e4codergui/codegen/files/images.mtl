[comment encoding = UTF-8 /]
[module images('http://www.sssuprojects.it/e4codergui')]

[import it::sssuprojects::e4codergui::codegen::files::common /]

[template public generateImageCode(root : DocumentRoot)]
[root.imageHeader()/]
[root.imageSource()/]
[/template]

[template private imageHeader(root : DocumentRoot)]
[file ('my_images.h', false, 'UTF-8')]
/*
 * my_images.h
 * Auto generated header file for bitmap data
 */

[for (widget : Widget | root.gui.frame.element)]
[widget.imageDecl()/]
[/for]
[/file]
[/template]


[template private imageSource(root : DocumentRoot)]
[file ('my_images.c', false, 'UTF-8')]
/*
 * my_images.c
 * Auto generated source file for bitmap data
 */

[for (widget : Widget | root.gui.frame.element)]
[widget.imageDef()/]
[/for]
[/file]
[/template]

[template private imageDecl(widget : Widget) post(trim()) ]
[if (widget.type = 'button-image')]
#define [widget.image_width('OFF')/] 5
#define [widget.image_height('OFF')/] 5
extern const unsigned short [widget.image_bitmap('OFF')/]['[]'/];
[elseif (widget.type = 'xxx')]
	xx
[elseif (widget.type = 'xx1')]
	xx	
[elseif (widget.type = 'xx2')]
	xx	
[elseif (widget.type = 'xx3')]
	xx	
[else] [comment Default handling/]
[comment: No img for this widget type/]
[/if]
[/template]

[template private imageDef(widget : Widget) post(trim()) ]
[if (widget.type = 'button-image')]
//TODO not fully implemented
const unsigned short [widget.image_bitmap('OFF')/]['[3]'/] = {0x01, 0x02, 0x03};
[elseif (widget.type = 'xxx')]
	xx
[elseif (widget.type = 'xx1')]
	xx	
[elseif (widget.type = 'xx2')]
	xx	
[elseif (widget.type = 'xx3')]
	xx	
[else] [comment Default handling/]
[comment: No img for this widget type/]
[/if]
[/template]

