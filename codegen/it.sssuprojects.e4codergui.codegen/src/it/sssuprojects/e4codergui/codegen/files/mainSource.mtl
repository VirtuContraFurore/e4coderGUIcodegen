[comment encoding = UTF-8 /]
[module mainSource('http://www.sssuprojects.it/e4codergui')]

[import it::sssuprojects::e4codergui::codegen::files::widgets /]
[import it::sssuprojects::e4codergui::codegen::files::common /]

[**
 * Generate the main.c file which also contains the callbacks
*/]
[template public generateMainSource(root : DocumentRoot)]
[file ('main.c', false, 'UTF-8')]
/*
 * main.c
 * Main file to run the gui and with the callbacks implementations
 */

[root.generateIncludes()/]

//forward decl of loop function
void loop();

int main(int argc, char ** argv){	
	WM_init(createWindow_[root.gui.frame->at(1).name.cname()/](), 1, 320, 240);
	WM_SCRIF_initEmulation(argc, argv, loop);
}

void loop(){
	WM_handleEvents();
    WM_update();
}

//[protected ('callbacks implementations')]

[root.generateCallbacks_def()/]

//[/protected]

[/file]
[/template]

[**
 * Main file includes
*/]
[template private generateIncludes(root : DocumentRoot)]
#include <stdlib.h>
#include <stdbool.h>

#include "windowmanager/core/windowmanager.h"
#include "windowmanager/graphics/color.h"

#include "my_gui.h"
[/template]

[template private generateCallbacks_def(root : DocumentRoot) post(trim()) ]
[for (widget : Widget | root.gui.frame.element) separator('\n')]
[if (widget.type = 'button-image')]
[widget.generateButtonImage_callbacks_def()/]
[elseif (widget.type = 'buttonled')]
[widget.generateButtonLed_callbacks_def()/]
[elseif (widget.type = 'image')]
[comment: No callback for this widget type/]
[elseif (widget.type = 'buttonknob')]
[widget.generateButtonKnob_callbacks_def()/]
[elseif (widget.type = 'xx3')]
xx	
[else] [comment Default handling/]
[comment: No callback for this widget type/]
[/if]
[/for]
[/template]
